{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","store/actions/editUser.js","store/actions/deleteUser.js","views/users/User.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","usersAPI","UsersAPI","connect","state","usersData","users","onEdit","id","options","dispatch","edit","getUsers","onDelete","delete","refreshUsers","match","params","user","find","useState","firstName","firstNameValue","setFirstNameValue","lastName","lastNameValue","setLastNameValue","email","emailValue","setEmailValue","username","usernameValue","setUsernameValue","password","passwordValue","setPasswordValue","history","useHistory","className","row","md","htmlFor","xs","onChange","e","target","type","placeholder","autoComplete","onClick","size","color"],"mappings":"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","file":"static/js/5.afb99e48.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { UsersAPI } from \"../../api\";\r\nimport { getUsers } from \"./getUsers\";\r\n\r\nconst usersAPI = new UsersAPI();\r\n\r\nconst editUser = (id, options) => {\r\n    return (dispatch) => {\r\n        usersAPI.edit(id, options)\r\n        dispatch(getUsers);\r\n    };\r\n};\r\n\r\nexport {\r\n    editUser\r\n}","import { UsersAPI } from \"../../api\";\r\nimport { getUsers } from \"./getUsers\";\r\n\r\nconst usersAPI = new UsersAPI();\r\n\r\nconst deleteUser = (id) => {\r\n    return (dispatch) => {\r\n        usersAPI.delete(id)\r\n        dispatch(getUsers);\r\n    };\r\n};\r\n\r\nexport {\r\n    deleteUser\r\n}","import CIcon from '@coreui/icons-react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol, CForm,\r\n  CFormGroup,\r\n  CFormText, CInput, CLabel\r\n} from '@coreui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { editUser } from '../../store/actions/editUser';\r\nimport { deleteUser } from '../../store/actions/deleteUser';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getUsers } from '../../store/actions/getUsers';\r\n\r\nconst User = ({usersData, match, onEdit, onDelete, refreshUsers}) => {\r\n  const id =  match.params.id;\r\n  const user = usersData.find( user => user.id.toString() === id)\r\n  const [firstNameValue, setFirstNameValue] = useState(user.firstName);\r\n  const [lastNameValue, setLastNameValue] = useState(user.lastName);\r\n  const [emailValue, setEmailValue] = useState(user.email);\r\n  const [usernameValue, setUsernameValue] = useState(user.username);\r\n  const [passwordValue, setPasswordValue] = useState(user.password);\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <CCard>\r\n        <CCardHeader>\r\n          Edit user\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm className=\"form-horizontal\">\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor='hf-text-first-name'>First name</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput onChange={ e => setFirstNameValue(e.target.value) }\r\n                value={ firstNameValue } type=\"text\"\r\n                id='hf-text-first-name' name='hf-text-first-name'\r\n                placeholder=\"Enter first name...\" autoComplete=\"text\" />\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor='hf-text-last-name'>Last name</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput onChange={ e => setLastNameValue(e.target.value) }\r\n                value={ lastNameValue } type=\"text\"\r\n                id='hf-text-last-name' name='hf-text-last-name'\r\n                placeholder=\"Enter last name...\" autoComplete=\"text\" />\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"hf-email\">e-mail</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput onChange={ e => setEmailValue(e.target.value) }\r\n                value={ emailValue } type=\"email\" id=\"hf-email\" name=\"hf-email\" placeholder=\"Enter Email...\" autoComplete=\"email\" />\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor='hf-text-username'>Username</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput onChange={ e => setUsernameValue(e.target.value) }\r\n                value={ usernameValue } type=\"text\"\r\n                id='hf-text-username' name='hf-text-username'\r\n                placeholder=\"Enter username...\" autoComplete=\"text\" />\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor='hf-text-password'>Password</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput onChange={ e => setPasswordValue(e.target.value) }\r\n                value={ passwordValue } type=\"password\"\r\n                id='hf-text-password' name='hf-text-password'\r\n                placeholder=\"Enter password...\" autoComplete=\"text\" />\r\n              </CCol>\r\n            </CFormGroup>\r\n          </CForm>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CButton onClick={ () => {\r\n            onEdit(id, {\r\n              firstName: firstNameValue,\r\n              lastName: lastNameValue,\r\n              email: emailValue,\r\n              username: usernameValue,\r\n              password: '1234'\r\n            });\r\n            refreshUsers();\r\n            history.push('/users');\r\n          }} type=\"submit\" size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Edit</CButton>&nbsp;\r\n          <CButton onClick={ () => {\r\n            onDelete(id);\r\n            refreshUsers();\r\n            history.push('/users');\r\n          } }\r\n          type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Delete</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    usersData: state.users.usersData\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  onEdit: editUser,\r\n  onDelete: deleteUser,\r\n  refreshUsers: getUsers\r\n})(User);\r\n"],"sourceRoot":""}